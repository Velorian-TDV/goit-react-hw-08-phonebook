{"version":3,"file":"static/js/332.6344d7ed.chunk.js","mappings":"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","sources":["../node_modules/nanoid/index.browser.js","Components/FormSection/FormSection.jsx","Components/Form/Form.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","Components/Pages/Contacts/Contacts.styled.js","Components/Pages/Contacts/Contacts.jsx"],"sourcesContent":["import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import PropTypes from 'prop-types'\r\nimport { nanoid } from \"nanoid\";\r\n\r\nexport default function FormSection({ name, type, pattern, title, placeholder }) {\r\n    return (\r\n        <section key={nanoid()}>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                id={name}\r\n                pattern={pattern}\r\n                title={title}\r\n                placeholder={placeholder}\r\n                autoComplete='off'\r\n                required\r\n            />\r\n        </section>\r\n    )\r\n}\r\n\r\nFormSection.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    pattern: PropTypes.string,\r\n    title: PropTypes.string,\r\n}","import { useSelector, useDispatch } from 'react-redux';\r\nimport { contactList } from '../../Redux/contactsSlice';\r\nimport { addContact } from '../../Redux/operations';\r\nimport FormSection from '../FormSection/FormSection'\r\n\r\nexport default function Form() {\r\n    const contactsFromStore = useSelector(contactList)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        const { name, phone } = event.target;\r\n        const exist = contactsFromStore.find(contact => contact.name === name.value);\r\n\r\n        if (exist) alert('contact exist')\r\n        else {\r\n            const newContact = {\r\n                \"name\": name.value,\r\n                \"number\": phone.value\r\n            };\r\n            dispatch(addContact(newContact))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className='form' onSubmit={handleSubmit} >\r\n            <FormSection\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder='Name'\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            />\r\n            <FormSection\r\n                type=\"text\"\r\n                name=\"phone\"\r\n                placeholder='Number'\r\n                pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\r\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            />\r\n            <button type=\"submit\">Add Contact</button>\r\n        </form>\r\n    )\r\n}","import { useDispatch } from 'react-redux';\r\nimport { setFilter } from '../../Redux/filterSlice';\r\n\r\nexport default function Filter() {\r\n    const dispatch = useDispatch();\r\n    const searchContact = event => dispatch(setFilter(event.target.value.toLowerCase()))\r\n\r\n    return (\r\n        <section className=\"search\">\r\n            <input\r\n                type=\"text\"\r\n                id='search'\r\n                onChange={searchContact}\r\n                placeholder=\"Find contact by name\"\r\n                autoComplete=\"off\"\r\n            />\r\n        </section>\r\n    )\r\n}","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport { contactList, contactsLoading, contactsError } from '../../Redux/contactsSlice';\r\nimport { contactFilter } from '../../Redux/filterSlice';\r\nimport { fetchContacts, deleteContact } from '../../Redux/operations';\r\n\r\nexport default function ContactList () {\r\n    const dispatch = useDispatch();\r\n    \r\n    const contactsFromStore = useSelector(contactList);\r\n    const filterStatus = useSelector(contactFilter);\r\n    const contactsIsLoading = useSelector(contactsLoading);\r\n    const contactsGetError = useSelector(contactsError);\r\n\r\n    const contactDelete = (id) => dispatch(deleteContact(id))\r\n    const getAllContacts = () => {\r\n        const filteredContacts = contactsFromStore.filter(item => item.name.toLowerCase().includes(filterStatus));\r\n        const displayContacts = filterStatus === '' ? contactsFromStore : filteredContacts;\r\n        return displayContacts\r\n    }\r\n    \r\n    useEffect(() => { dispatch(fetchContacts()) }, [dispatch])\r\n\r\n    return (\r\n        <section className='contacts'>\r\n            {getAllContacts().length === 0 ?\r\n                contactsIsLoading && !contactsGetError && <p className=\"empty\">Loading ...</p> ||\r\n                <p className=\"empty\">Contacts not found</p> :\r\n                <ul>\r\n                    {getAllContacts().map(({ id, name, number }) => (\r\n                        <li key={nanoid()}>\r\n                            <p>{name}: {number}</p>\r\n                            <button\r\n                                type='button'\r\n                                name={id}\r\n                                onClick={() => contactDelete(id)}\r\n                            >Delete</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            }\r\n        </section>\r\n    )\r\n}","import { styled } from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    .empty{\r\n        text-align: center;\r\n    }\r\n\r\n    .form{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        color: #162946;\r\n        width: 250px;\r\n        height: 220px;\r\n        margin: 30px;\r\n        padding: 15px;\r\n        border-radius: 10px;\r\n        background-color: #f1f2f6;\r\n        box-shadow: -14px -14px 20px 0 #fff, \r\n                    inset 1px 1px 1px 0 #fff, \r\n                    3px 3px 6px 0 rgba(185, 202, 216, 0.64), \r\n                    -4px 0 3px 0 hsla(0, 0%, 100%, 0.6), \r\n                    0 -12px 20px 0 hsla(0, 0%, 100%, 0.6), \r\n                    -2px -2px 14px 4px #fff, \r\n                    3px 3px 20px 13px rgba(176, 196, 219, 0.52), \r\n                    3px 3px 15px 0 #c4ceda;\r\n        input{\r\n            height: 35px;\r\n            width: 100%;\r\n            padding: 10px;\r\n            margin-top: 10px;\r\n\r\n            outline: none;\r\n            border: none;\r\n            border-radius: 10px;\r\n            background-color: #f1f2f6;\r\n            box-shadow: inset -3px -2px 7px 0 #fff, \r\n                        inset 3px 3px 7px -2px #c4ceda;\r\n            color: #446079;\r\n        }\r\n\r\n        button{\r\n            width: 150px;\r\n            height: 35px;\r\n            margin: 30px 0px;\r\n\r\n            border: none;\r\n            border-radius: 10px;\r\n            transition: .3s box-shadow linear,\r\n                        .2s color linear,\r\n                        .3s opacity linear;\r\n            background-color: #f1f2f6;\r\n            box-shadow: -14px -14px 20px 0 #fff, \r\n                        inset 1px 1px 1px 0 #fff, \r\n                        3px 3px 6px 0 rgba(185, 202, 216, 0.64), \r\n                        -4px 0 3px 0 hsla(0, 0%, 100%, 0.6), \r\n                        0 -12px 20px 0 hsla(0, 0%, 100%, 0.6), \r\n                        -2px -2px 14px 4px #fff, \r\n                        3px 3px 20px 10px rgba(176, 196, 219, 0.52), \r\n                        3px 3px 15px 0 #c4ceda;\r\n\r\n            &:hover{\r\n                color: #f50;\r\n            }\r\n\r\n            &:active{\r\n                color: #f50;\r\n                box-shadow: inset 14px 14px 12px 0 rgba(196, 206, 218, 0.14), \r\n                            inset -3px -3px 5px 0 #fff, \r\n                            inset 2px 2px 5px 0 rgba(196, 206, 218, 0.78), \r\n                            inset 1px 1px 16px -13px #6f8197;\r\n            }\r\n        }\r\n    }\r\n\r\n    .search{\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        height: 85px;\r\n\r\n        color: #162946;\r\n        margin: 30px;\r\n        padding: 15px;\r\n        border-radius: 10px;\r\n        background-color: #f1f2f6;\r\n        box-shadow: -14px -14px 20px 0 #fff, \r\n                    inset 1px 1px 1px 0 #fff, \r\n                    3px 3px 6px 0 rgba(185, 202, 216, 0.64), \r\n                    -4px 0 3px 0 hsla(0, 0%, 100%, 0.6), \r\n                    0 -12px 20px 0 hsla(0, 0%, 100%, 0.6), \r\n                    -2px -2px 14px 4px #fff, \r\n                    3px 3px 20px 13px rgba(176, 196, 219, 0.52), \r\n                    3px 3px 15px 0 #c4ceda;\r\n        input{\r\n            height: 35px;\r\n            width: 100%;\r\n            padding: 10px;\r\n            margin-top: 10px;\r\n\r\n            outline: none;\r\n            border: none;\r\n            border-radius: 10px;\r\n            background-color: #f1f2f6;\r\n            box-shadow: inset -3px -2px 7px 0 #fff, \r\n                        inset 3px 3px 7px -2px #c4ceda;\r\n            color: #446079;\r\n        }\r\n    }\r\n\r\n    .contacts{\r\n        width: 350px;\r\n\r\n        overflow-y: scroll;\r\n        &::-webkit-scrollbar {\r\n            width: 5px;\r\n        }\r\n\r\n        &::-webkit-scrollbar-thumb {\r\n            background-color: lightgray;\r\n            border-radius: 15px;\r\n        }\r\n        \r\n        color: #162946;\r\n        margin: 30px;\r\n        padding: 15px;\r\n        border-radius: 10px;\r\n        background-color: #f1f2f6;\r\n        box-shadow: -14px -14px 20px 0 #fff, \r\n                    inset 1px 1px 1px 0 #fff, \r\n                    3px 3px 6px 0 rgba(185, 202, 216, 0.64), \r\n                    -4px 0 3px 0 hsla(0, 0%, 100%, 0.6), \r\n                    0 -12px 20px 0 hsla(0, 0%, 100%, 0.6), \r\n                    -2px -2px 14px 4px #fff, \r\n                    3px 3px 20px 13px rgba(176, 196, 219, 0.52), \r\n                    3px 3px 15px 0 #c4ceda;\r\n        ul{\r\n            padding: 10px;\r\n\r\n            li{\r\n                display: flex;\r\n                align-items: center;\r\n\r\n                width: 100%;\r\n                height: 40px;\r\n                padding: 0px 10px;\r\n                margin: 15px 0px;\r\n\r\n                border-radius: 10px;\r\n                box-shadow: \r\n                            -10px -10px 20px 0 #fff, \r\n                            inset 1px 1px 1px 0 #fff, \r\n                            3px 3px 6px 0 rgba(185, 202, 216, 0.64), \r\n                            -4px 0 3px 0 hsla(0, 0%, 100%, 0.6), \r\n                            0 -10px 20px 0 hsla(0, 0%, 100%, 0.6), \r\n                            3px 3px 15px 0 #c4ceda\r\n                            ;\r\n                button{\r\n                    margin-left: auto;\r\n                    padding: 5px 10px;\r\n                    border: none;\r\n                    border-radius: 5px;\r\n                    transition: .3s box-shadow linear,\r\n                                .2s color linear,\r\n                                .3s opacity linear;\r\n                    background-color: #f1f2f6;\r\n                    box-shadow: \r\n                                inset 1px 1px 1px 0 #fff, \r\n                                3px 3px 6px 0 rgba(185, 202, 216, 0.64), \r\n                                -4px 0 3px 0 hsla(0, 0%, 100%, 0.6), \r\n                                0 -12px 20px 0 hsla(0, 0%, 100%, 0.6), \r\n                                -2px -2px 14px 4px #fff, \r\n                                3px 3px 20px 10px rgba(176, 196, 219, 0.52), \r\n                                3px 3px 15px 0 #c4ceda;\r\n\r\n                    &:hover{\r\n                        color: #f50;\r\n                    }\r\n\r\n                    &:active{\r\n                        color: #f50;\r\n                        box-shadow: inset 14px 14px 12px 0 rgba(196, 206, 218, 0.14), \r\n                                    inset -3px -3px 5px 0 #fff, \r\n                                    inset 2px 2px 5px 0 rgba(196, 206, 218, 0.78), \r\n                                    inset 1px 1px 16px -13px #6f8197;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n`","import Form from '../../Form/Form'\r\nimport Filter from '../../Filter/Filter'\r\nimport ContactList from '../../ContactList/ContactList'\r\nimport { Wrapper } from './Contacts.styled'\r\n\r\nexport default function Contacts() {\r\n    return (\r\n        <Wrapper>\r\n            <Form />\r\n            <Filter />\r\n            <ContactList />\r\n        </Wrapper>\r\n    )\r\n}"],"names":["nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","FormSection","_ref","name","type","pattern","title","placeholder","_jsx","children","autoComplete","required","Form","contactsFromStore","useSelector","contactList","dispatch","useDispatch","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_event$target","phone","newContact","wrap","_context","prev","next","preventDefault","target","find","contact","value","alert","addContact","stop","_x","apply","_jsxs","className","onSubmit","Filter","onChange","setFilter","toLowerCase","ContactList","filterStatus","contactFilter","contactsIsLoading","contactsLoading","contactsGetError","contactsError","getAllContacts","filteredContacts","filter","item","includes","useEffect","fetchContacts","map","number","onClick","deleteContact","contactDelete","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Contacts"],"sourceRoot":""}